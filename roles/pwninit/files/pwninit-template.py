#!/usr/bin/env python3

import argparse
from pwn import *

def exploit(s):
    # good luck pwning :)
    pass

def find_offset(s):
    gdb.attach(s)
    s.sendlineafter(">", cyclic(0x100))
    s.interactive()

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--DEBUG', action='store_true', help='Enable verbose pwn debugging output')
    parser.add_argument('--PROXY', action='store_true', help='Enable Burp Suite Proxy')
    parser.add_argument('--LOCAL', action='store_true', help='Target local binary')
    parser.add_argument('--GDB', action='store_true', help='Attach GDB to spawned local process')
    args = parser.parse_args()

    {bindings}

    context.binary = elf
    context(terminal=['tmux', 'split-window', '-h'])

    if args.DEBUG:
        print("DEBUG MODE:\tEnabled")
        context.log_level = "DEBUG"

    if args.PROXY:
        print("PROXY MODE:\tBurp Suite Proxy Enabled")
        proxies = {{
            "http": "http://127.0.0.1:8080",
            "https": "http://127.0.0.1:8080"}}
    else:
        proxies = ''

    if args.LOCAL:
        print("LOCAL MODE:\tEnabled")
        s = process([{proc_args}])
        if args.GDB:
            print("GDB MODE:\tEnabled")
            gdb.attach(s)
    else:
        print("REMOTE ATTACK:\tEnabled")
        s = remote("addr", 1338) # TODO: Update with hostname/port

    exploit(s)
    s.interactive()

if __name__ == "__main__":
    main()
