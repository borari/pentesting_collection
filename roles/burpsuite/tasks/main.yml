---
# tasks file for burpsuite
- name: Burp Suite | Import Tasks | Dependencies
  ansible.builtin.import_tasks: dependencies.yml

- name: Burp Suite | Import Tasks | Dependencies
  when: ansible_facts['distribution'] in ["Debian","Kali","Ubuntu"]
  ansible.builtin.import_tasks: dependencies_Debian.yml

- name: Burp Suite | Import Tasks | Dependencies
  when: ansible_facts['os_family'] == "RedHat"
  ansible.builtin.import_tasks: dependencies_RedHat.yml

- name: Burp Suite | Import Tasks | Edition Checks
  ansible.builtin.import_tasks: edition_license_checks.yml

- name: Burp Suite | Import Tasks | Validations
  ansible.builtin.import_tasks: validations.yml

- name: Burp Suite | Import Tasks | Variables
  ansible.builtin.import_tasks: variables.yml

- name: Burp Suite | Import Tasks | Lookup Latest Version
  ansible.builtin.import_tasks: lookup-latest-version.yml
  when: burpsuite_version == "latest"

# Check previous installation
- name: Burp Suite | Import Tasks | Check Existing Installation
  ansible.builtin.import_tasks: check-previous-install.yml

# Install tasks
- name: Burp Suite | Import Tasks | Install
  ansible.builtin.import_tasks: install.yml
  when: installed_version is not defined or installed_version != _burpsuite_installer_version

# Burp Suite extras
- name: Burp Suite | Import Tasks | Deploy Extras
  ansible.builtin.import_tasks: deploy-extras.yml

# Activate Burp Suite
- name: Burp Suite | Configuration | Activate and Download Public CA Cert
  when: burpsuite_activate
  become: true
  become_user: "{{ burpsuite_user }}"
  ansible.builtin.command:
    cmd: "python3 autoburp.py --cacert-path '{{ burpsuite_cacert_path }}' {{ burpsuite_install_dir }}"
    chdir: "{{ burpsuite_extras_dir }}"
  ignore_errors: true
  environment:
    BURP_LICENSE_KEY: "{{ burpsuite_license_key }}"
  async: 600
  register: autoburp
  changed_when: "'Terms and conditions accepted.' in autoburp.stdout or
    'Your license is successfully installed and activated.' in autoburp.stdout or
    'Certificate downloaded/updated' in autoburp.stdout or
    'The supplied license key was not recognized.' in autoburp.stdout" # added so that it will gracefully fail and playbook will continue if license key is invalid

# Create default user config
- name: Burp Suite | Configuration | Deploy User Config
  ansible.builtin.import_tasks: user-config.yml
