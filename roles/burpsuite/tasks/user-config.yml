---
- name: Check for existing user config
  ansible.builtin.stat:
    path: "{{ burpsuite_user_details.home }}/.BurpSuite/UserConfig{{ burpsuite_edition | capitalize }}.json"
  register: burpsuite_user_config_stat

# Create basic user config
- name: Create Burp Suite user config
  ansible.builtin.template:
    src: UserConfig.json.j2
    dest: "{{ burpsuite_user_details.home }}/.BurpSuite/UserConfig{{ burpsuite_edition | capitalize }}.json"
    owner: "{{ burpsuite_user }}"
    group: "{{ burpsuite_user_details.group }}"
    mode: '0600'
  when: not burpsuite_user_config_stat.stat.exists

# Otherwise, update existing user config
- name: Update jruby path
  ansible.builtin.lineinfile:
    path: "{{ burpsuite_user_details.home }}/.BurpSuite/UserConfig{{ burpsuite_edition | capitalize }}.json"
    regexp: '^(.*)"location_of_jruby_jar_file":".*'
    line: '\1"location_of_jruby_jar_file":"{{ burpsuite_extras_dir }}/{{ burpsuite_extras_jars.jruby.jar }}"'
    backrefs: true
  when: burpsuite_user_config_stat.stat.exists

- name: Update jython path
  ansible.builtin.lineinfile:
    path: "{{ burpsuite_user_details.home }}/.BurpSuite/UserConfig{{ burpsuite_edition | capitalize }}.json"
    regexp: '^(.*)"location_of_jython_standalone_jar_file":".*'
    line: '\1"location_of_jython_standalone_jar_file":"{{ burpsuite_extras_dir }}/{{ burpsuite_extras_jars.jython.jar }}"'
    backrefs: true
  when: burpsuite_user_config_stat.stat.exists
